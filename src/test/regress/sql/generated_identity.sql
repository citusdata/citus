CREATE SCHEMA generated_identities;
SET search_path TO generated_identities;

DROP TABLE IF EXISTS test;

CREATE TABLE generated_identities_test (
    a int GENERATED BY DEFAULT AS IDENTITY,
    b bigint GENERATED ALWAYS AS IDENTITY (START WITH 10 INCREMENT BY 10),
    c smallint GENERATED BY DEFAULT AS IDENTITY,
    d serial,
    e bigserial,
    f smallserial,
    g int
)
PARTITION BY RANGE (a);
CREATE TABLE generated_identities_test_1_5 PARTITION OF generated_identities_test FOR VALUES FROM (1) TO (5);
CREATE TABLE generated_identities_test_5_50 PARTITION OF generated_identities_test FOR VALUES FROM (5) TO (50);

select create_distributed_table('generated_identities_test', 'a');

\d generated_identities_test

\c - - - :worker_1_port

\d generated_identities_test

\c - - - :master_port
SET search_path TO generated_identities;

insert into generated_identities_test (g) values (1);

insert into generated_identities_test (g) select 2;

INSERT INTO generated_identities_test (g)
SELECT s FROM generate_series(3,7) s;

SELECT * FROM generated_identities_test ORDER BY 1;

select undistribute_table('generated_identities_test');

SELECT * FROM generated_identities_test ORDER BY 1;

\d generated_identities_test

INSERT INTO generated_identities_test (g)
SELECT s FROM generate_series(8,10) s;

SELECT * FROM generated_identities_test ORDER BY 1;

select create_distributed_table('generated_identities_test', 'a');

select alter_distributed_table('generated_identities_test', 'g');

select alter_distributed_table('generated_identities_test', 'b');

select alter_distributed_table('generated_identities_test', 'c');

select undistribute_table('generated_identities_test');

SELECT * FROM generated_identities_test ORDER BY g;

SELECT create_reference_table('generated_identities_test');

INSERT INTO generated_identities_test (g)
SELECT s FROM generate_series(11,20) s;

SELECT * FROM generated_identities_test ORDER BY g;

select undistribute_table('generated_identities_test');

DROP SCHEMA "generated_identities" CASCADE;
