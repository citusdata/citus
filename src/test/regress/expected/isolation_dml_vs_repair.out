Parsed test spec with 2 sessions

starting permutation: s2-invalidate-57637 s1-begin s1-insertone s2-repair s1-commit
master_create_worker_shards

               
step s2-invalidate-57637: 
    UPDATE pg_dist_shard_placement SET shardstate = '3' WHERE shardid = (SELECT shardid FROM pg_dist_shard WHERE logicalrelid = 'test_table'::regclass) AND nodeport = 57637;

step s1-begin: 
    BEGIN;

step s1-insertone: 
    INSERT INTO test_table VALUES(1, 1);

step s2-repair: 
    SELECT master_copy_shard_placement((SELECT shardid FROM pg_dist_shard WHERE logicalrelid = 'test_table'::regclass), 'localhost', 57638, 'localhost', 57637);
 <waiting ...>
step s1-commit: 
    COMMIT;

step s2-repair: <... completed>
master_copy_shard_placement

               

starting permutation: s1-insertone s2-invalidate-57637 s1-begin s1-insertall s2-repair s1-commit
master_create_worker_shards

               
step s1-insertone: 
    INSERT INTO test_table VALUES(1, 1);

step s2-invalidate-57637: 
    UPDATE pg_dist_shard_placement SET shardstate = '3' WHERE shardid = (SELECT shardid FROM pg_dist_shard WHERE logicalrelid = 'test_table'::regclass) AND nodeport = 57637;

step s1-begin: 
    BEGIN;

step s1-insertall: 
    INSERT INTO test_table SELECT test_id, data+1 FROM test_table;

step s2-repair: 
    SELECT master_copy_shard_placement((SELECT shardid FROM pg_dist_shard WHERE logicalrelid = 'test_table'::regclass), 'localhost', 57638, 'localhost', 57637);
 <waiting ...>
step s1-commit: 
    COMMIT;

step s2-repair: <... completed>
master_copy_shard_placement

               

starting permutation: s2-invalidate-57637 s2-begin s2-repair s1-insertone s2-commit s2-invalidate-57638 s1-display s2-invalidate-57637 s2-revalidate-57638 s1-display
master_create_worker_shards

               
step s2-invalidate-57637: 
    UPDATE pg_dist_shard_placement SET shardstate = '3' WHERE shardid = (SELECT shardid FROM pg_dist_shard WHERE logicalrelid = 'test_table'::regclass) AND nodeport = 57637;

step s2-begin: 
    BEGIN;

step s2-repair: 
    SELECT master_copy_shard_placement((SELECT shardid FROM pg_dist_shard WHERE logicalrelid = 'test_table'::regclass), 'localhost', 57638, 'localhost', 57637);

master_copy_shard_placement

               
step s1-insertone: 
    INSERT INTO test_table VALUES(1, 1);
 <waiting ...>
step s2-commit: 
    COMMIT;

step s1-insertone: <... completed>
step s2-invalidate-57638: 
    UPDATE pg_dist_shard_placement SET shardstate = '3' WHERE shardid = (SELECT shardid FROM pg_dist_shard WHERE logicalrelid = 'test_table'::regclass) AND nodeport = 57638;

step s1-display: 
    SELECT * FROM test_table WHERE test_id = 1;

test_id        data           

1              1              
step s2-invalidate-57637: 
    UPDATE pg_dist_shard_placement SET shardstate = '3' WHERE shardid = (SELECT shardid FROM pg_dist_shard WHERE logicalrelid = 'test_table'::regclass) AND nodeport = 57637;

step s2-revalidate-57638: 
    UPDATE pg_dist_shard_placement SET shardstate = '1' WHERE shardid = (SELECT shardid FROM pg_dist_shard WHERE logicalrelid = 'test_table'::regclass) AND nodeport = 57638;

step s1-display: 
    SELECT * FROM test_table WHERE test_id = 1;

test_id        data           

1              1              

starting permutation: s2-invalidate-57637 s1-prepared-insertone s2-begin s2-repair s1-prepared-insertone s2-commit s2-invalidate-57638 s1-display s2-invalidate-57637 s2-revalidate-57638 s1-display
master_create_worker_shards

               
step s2-invalidate-57637: 
    UPDATE pg_dist_shard_placement SET shardstate = '3' WHERE shardid = (SELECT shardid FROM pg_dist_shard WHERE logicalrelid = 'test_table'::regclass) AND nodeport = 57637;

step s1-prepared-insertone: 
    EXECUTE insertone;

step s2-begin: 
    BEGIN;

step s2-repair: 
    SELECT master_copy_shard_placement((SELECT shardid FROM pg_dist_shard WHERE logicalrelid = 'test_table'::regclass), 'localhost', 57638, 'localhost', 57637);

master_copy_shard_placement

               
step s1-prepared-insertone: 
    EXECUTE insertone;
 <waiting ...>
step s2-commit: 
    COMMIT;

step s1-prepared-insertone: <... completed>
error in steps s2-commit s1-prepared-insertone: ERROR:  prepared modifications cannot be executed on a shard while it is being copied
step s2-invalidate-57638: 
    UPDATE pg_dist_shard_placement SET shardstate = '3' WHERE shardid = (SELECT shardid FROM pg_dist_shard WHERE logicalrelid = 'test_table'::regclass) AND nodeport = 57638;

step s1-display: 
    SELECT * FROM test_table WHERE test_id = 1;

test_id        data           

1              1              
step s2-invalidate-57637: 
    UPDATE pg_dist_shard_placement SET shardstate = '3' WHERE shardid = (SELECT shardid FROM pg_dist_shard WHERE logicalrelid = 'test_table'::regclass) AND nodeport = 57637;

step s2-revalidate-57638: 
    UPDATE pg_dist_shard_placement SET shardstate = '1' WHERE shardid = (SELECT shardid FROM pg_dist_shard WHERE logicalrelid = 'test_table'::regclass) AND nodeport = 57638;

step s1-display: 
    SELECT * FROM test_table WHERE test_id = 1;

test_id        data           

1              1              

starting permutation: s2-invalidate-57637 s1-insertone s1-prepared-insertall s2-begin s2-repair s1-prepared-insertall s2-commit s2-invalidate-57638 s1-display s2-invalidate-57637 s2-revalidate-57638 s1-display
master_create_worker_shards

               
step s2-invalidate-57637: 
    UPDATE pg_dist_shard_placement SET shardstate = '3' WHERE shardid = (SELECT shardid FROM pg_dist_shard WHERE logicalrelid = 'test_table'::regclass) AND nodeport = 57637;

step s1-insertone: 
    INSERT INTO test_table VALUES(1, 1);

step s1-prepared-insertall: 
    EXECUTE insertall;

step s2-begin: 
    BEGIN;

step s2-repair: 
    SELECT master_copy_shard_placement((SELECT shardid FROM pg_dist_shard WHERE logicalrelid = 'test_table'::regclass), 'localhost', 57638, 'localhost', 57637);

master_copy_shard_placement

               
step s1-prepared-insertall: 
    EXECUTE insertall;
 <waiting ...>
step s2-commit: 
    COMMIT;

step s1-prepared-insertall: <... completed>
error in steps s2-commit s1-prepared-insertall: ERROR:  prepared modifications cannot be executed on a shard while it is being copied
step s2-invalidate-57638: 
    UPDATE pg_dist_shard_placement SET shardstate = '3' WHERE shardid = (SELECT shardid FROM pg_dist_shard WHERE logicalrelid = 'test_table'::regclass) AND nodeport = 57638;

step s1-display: 
    SELECT * FROM test_table WHERE test_id = 1;

test_id        data           

1              1              
1              2              
step s2-invalidate-57637: 
    UPDATE pg_dist_shard_placement SET shardstate = '3' WHERE shardid = (SELECT shardid FROM pg_dist_shard WHERE logicalrelid = 'test_table'::regclass) AND nodeport = 57637;

step s2-revalidate-57638: 
    UPDATE pg_dist_shard_placement SET shardstate = '1' WHERE shardid = (SELECT shardid FROM pg_dist_shard WHERE logicalrelid = 'test_table'::regclass) AND nodeport = 57638;

step s1-display: 
    SELECT * FROM test_table WHERE test_id = 1;

test_id        data           

1              1              
1              2              
