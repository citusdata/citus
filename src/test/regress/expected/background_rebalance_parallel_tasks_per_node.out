CREATE SCHEMA background_rebalance;
SET search_path TO background_rebalance;
SET citus.next_shard_id TO 85675000;
SET citus.shard_replication_factor TO 1;
SET client_min_messages TO WARNING;
ALTER SEQUENCE pg_dist_background_job_job_id_seq RESTART 100;
ALTER SEQUENCE pg_dist_background_task_task_id_seq RESTART 1000;
ALTER SYSTEM SET citus.background_task_queue_interval TO '1s';
SELECT pg_reload_conf();
 pg_reload_conf
---------------------------------------------------------------------
 t
(1 row)

alter system set citus.max_parallel_tasks_per_node to 2;
select pg_reload_conf();
 pg_reload_conf
---------------------------------------------------------------------
 t
(1 row)

drop table if exists t1;
drop table if exists t2;
drop table if exists t3;
select citus_remove_node('localhost', :worker_2_port);
 citus_remove_node
---------------------------------------------------------------------

(1 row)

CREATE TABLE t1 (a int PRIMARY KEY);
SELECT create_distributed_table('t1', 'a', shard_count => 4, colocate_with => 'none');
 create_distributed_table
---------------------------------------------------------------------

(1 row)

CREATE TABLE t2 (a int PRIMARY KEY);
SELECT create_distributed_table('t2', 'a', shard_count => 4, colocate_with => 'none');
 create_distributed_table
---------------------------------------------------------------------

(1 row)

CREATE TABLE t3 (a int PRIMARY KEY);
SELECT create_distributed_table('t3', 'a', shard_count => 4, colocate_with => 'none');
 create_distributed_table
---------------------------------------------------------------------

(1 row)

select citus_add_node('localhost', :worker_2_port);
 citus_add_node
---------------------------------------------------------------------
             30
(1 row)

SELECT * FROM get_rebalance_table_shards_plan() ORDER BY shardid;
 table_name | shardid  | shard_size | sourcename | sourceport | targetname | targetport
---------------------------------------------------------------------
 t1         | 85675000 |          0 | localhost  |      57637 | localhost  |      57638
 t1         | 85675001 |          0 | localhost  |      57637 | localhost  |      57638
 t2         | 85675004 |          0 | localhost  |      57637 | localhost  |      57638
 t2         | 85675005 |          0 | localhost  |      57637 | localhost  |      57638
 t3         | 85675008 |          0 | localhost  |      57637 | localhost  |      57638
 t3         | 85675009 |          0 | localhost  |      57637 | localhost  |      57638
(6 rows)

SELECT citus_rebalance_start AS job_id from citus_rebalance_start() \gset
-- show that exactly two are running
SELECT citus_task_wait(1000, desired_status => 'running');
 citus_task_wait
---------------------------------------------------------------------

(1 row)

SELECT job_id, task_id, status, nodes_involved
FROM pg_dist_background_task WHERE job_id in (:job_id) ORDER BY task_id;
 job_id | task_id |  status  | nodes_involved
---------------------------------------------------------------------
    100 |    1000 | running  | {16,30}
    100 |    1001 | blocked  | {16,30}
    100 |    1002 | running  | {16,30}
    100 |    1003 | blocked  | {16,30}
    100 |    1004 | runnable | {16,30}
    100 |    1005 | blocked  | {16,30}
(6 rows)

SELECT citus_task_wait(1000, desired_status => 'done');
 citus_task_wait
---------------------------------------------------------------------

(1 row)

SELECT job_id, task_id, status, nodes_involved
FROM pg_dist_background_task WHERE job_id in (:job_id) ORDER BY task_id;
 job_id | task_id |  status  | nodes_involved
---------------------------------------------------------------------
    100 |    1000 | done     | {16,30}
    100 |    1001 | running  | {16,30}
    100 |    1002 | done     | {16,30}
    100 |    1003 | running  | {16,30}
    100 |    1004 | runnable | {16,30}
    100 |    1005 | blocked  | {16,30}
(6 rows)

DROP SCHEMA background_rebalance CASCADE;
TRUNCATE pg_dist_background_job CASCADE;
SELECT public.wait_for_resource_cleanup();
 wait_for_resource_cleanup
---------------------------------------------------------------------

(1 row)

