-- Test passing off CALL to mx workers
-- Create worker-local tables to test procedure calls were routed
set citus.shard_replication_factor to 1;
SELECT run_command_on_workers($$
create table mx_call_table (val int);
insert into mx_call_table values (2);
$$);
       run_command_on_workers       
------------------------------------
 (localhost,57637,t,"CREATE TABLE")
 (localhost,57638,t,"CREATE TABLE")
(2 rows)

CREATE TABLE mx_call_dist_table(id int);
select create_distributed_table('mx_call_dist_table', 'id');
 create_distributed_table 
--------------------------
 
(1 row)

CREATE PROCEDURE mx_call_proc(x int, INOUT y int) LANGUAGE plpgsql AS $$
BEGIN
    y := x + (select val from mx_call_table);
END;
$$;
ERROR:  syntax error at or near "PROCEDURE"
LINE 1: CREATE PROCEDURE mx_call_proc(x int, INOUT y int) LANGUAGE p...
               ^
select create_distributed_function('mx_call_proc(int,int)');
ERROR:  function "mx_call_proc(int,int)" does not exist
LINE 1: select create_distributed_function('mx_call_proc(int,int)');
                                           ^
update citus.pg_dist_object
set distribution_argument_index = 1, colocationid = pg_dist_partition.colocationid
from pg_proc, pg_dist_partition
where proname = 'mx_call_proc' and oid = objid and pg_dist_partition.logicalrelid = 'mx_call_dist_table'::regclass;
call mx_call_proc(2, 0);
ERROR:  syntax error at or near "call"
LINE 1: call mx_call_proc(2, 0);
        ^
SELECT run_command_on_workers($$
drop table mx_call_table;
$$);
      run_command_on_workers      
----------------------------------
 (localhost,57637,t,"DROP TABLE")
 (localhost,57638,t,"DROP TABLE")
(2 rows)

DROP TABLE mx_call_dist_table;
DROP PROCEDURE mx_call_proc;
ERROR:  syntax error at or near "PROCEDURE"
LINE 1: DROP PROCEDURE mx_call_proc;
             ^
reset citus.shard_replication_factor;
