Parsed test spec with 2 sessions

starting permutation: s1-begin s1-move-placement s1-drop-marked-shards s2-drop-marked-shards s1-commit
step s1-begin:
    BEGIN;

step s1-move-placement:
        SET citus.defer_drop_after_shard_move TO ON;
     SELECT master_move_shard_placement((SELECT * FROM selected_shard), 'localhost', 57637, 'localhost', 57638);

master_move_shard_placement


step s1-drop-marked-shards:
    SELECT public.master_defer_delete_shards();

master_defer_delete_shards

1
step s2-drop-marked-shards:
    SET client_min_messages to DEBUG1;
    SELECT public.master_defer_delete_shards();
 <waiting ...>
step s1-commit: 
    COMMIT;

step s2-drop-marked-shards: <... completed>
master_defer_delete_shards

0

starting permutation: s1-begin s1-move-placement s2-drop-marked-shards s1-drop-marked-shards s1-commit
step s1-begin:
    BEGIN;

step s1-move-placement:
        SET citus.defer_drop_after_shard_move TO ON;
     SELECT master_move_shard_placement((SELECT * FROM selected_shard), 'localhost', 57637, 'localhost', 57638);

master_move_shard_placement


step s2-drop-marked-shards:
    SET client_min_messages to DEBUG1;
    SELECT public.master_defer_delete_shards();

master_defer_delete_shards

0
step s1-drop-marked-shards:
    SELECT public.master_defer_delete_shards();

master_defer_delete_shards

1
step s1-commit:
    COMMIT;


starting permutation: s1-begin s1-move-placement s2-start-session-level-connection s2-lock-table-on-worker s1-drop-marked-shards s1-commit s2-stop-connection
step s1-begin:
    BEGIN;

step s1-move-placement:
        SET citus.defer_drop_after_shard_move TO ON;
     SELECT master_move_shard_placement((SELECT * FROM selected_shard), 'localhost', 57637, 'localhost', 57638);

master_move_shard_placement


step s2-start-session-level-connection:
        SELECT start_session_level_connection_to_node('localhost', 57637);

start_session_level_connection_to_node


step s2-lock-table-on-worker:
    SELECT run_commands_on_session_level_connection_to_node('BEGIN;');
    SELECT run_commands_on_session_level_connection_to_node('LOCK TABLE t1_120000');

run_commands_on_session_level_connection_to_node


run_commands_on_session_level_connection_to_node


s1: WARNING:  canceling statement due to lock timeout
s1: WARNING:  Failed to drop 1 old shards out of 1
step s1-drop-marked-shards:
    SELECT public.master_defer_delete_shards();

master_defer_delete_shards

0
step s1-commit:
    COMMIT;

step s2-stop-connection:
 SELECT stop_session_level_connection_to_node();

stop_session_level_connection_to_node



starting permutation: s1-begin s1-lock-pg-dist-placement s2-drop-old-shards s1-commit
step s1-begin:
    BEGIN;

step s1-lock-pg-dist-placement:
    LOCK TABLE pg_dist_placement IN SHARE ROW EXCLUSIVE MODE;

s2: DEBUG:  could not acquire shard lock to cleanup placements
step s2-drop-old-shards:
    SELECT run_try_drop_marked_shards();

run_try_drop_marked_shards


step s1-commit:
    COMMIT;

