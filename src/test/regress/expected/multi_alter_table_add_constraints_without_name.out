--
-- MULTI_ALTER_TABLE_ADD_CONSTRAINTS_WITHOUT_NAME
--
-- Test checks whether constraints of distributed tables can be adjusted using
-- the ALTER TABLE ... ADD without specifying a name.
SET citus.shard_count TO 32;
ALTER SEQUENCE pg_catalog.pg_dist_shardid_seq RESTART 5410000;
ALTER SEQUENCE pg_catalog.pg_dist_placement_placementid_seq RESTART 5410000;
CREATE SCHEMA sc1;
-- Check "ADD PRIMARY KEY"
CREATE TABLE sc1.products (
    product_no integer,
    name text,
    price numeric
);
SELECT create_distributed_table('sc1.products', 'product_no');
 create_distributed_table
---------------------------------------------------------------------

(1 row)

ALTER TABLE sc1.products ADD PRIMARY KEY(product_no);
SELECT con.conname
    FROM pg_catalog.pg_constraint con
      INNER JOIN pg_catalog.pg_class rel ON rel.oid = con.conrelid
      INNER JOIN pg_catalog.pg_namespace nsp ON nsp.oid = connamespace
	      WHERE rel.relname = 'products';
    conname
---------------------------------------------------------------------
 products_pkey
(1 row)

-- Check that the primary key name created on the coordinator is sent to workers and
-- the constraints created for the shard tables conform to the <conname>_shardid scheme.
\c - - :public_worker_1_host :worker_1_port
SELECT con.conname
    FROM pg_catalog.pg_constraint con
      INNER JOIN pg_catalog.pg_class rel ON rel.oid = con.conrelid
      INNER JOIN pg_catalog.pg_namespace nsp ON nsp.oid = connamespace
		WHERE rel.relname = 'products_5410000';
        conname
---------------------------------------------------------------------
 products_pkey_5410000
(1 row)

\c - - :master_host :master_port
ALTER TABLE sc1.products DROP CONSTRAINT products_pkey;
ALTER TABLE sc1.products ADD PRIMARY KEY(product_no);
DROP TABLE sc1.products;
-- Check "ADD PRIMARY KEY" with reference table
CREATE TABLE sc1.products_ref (
    product_no integer,
    name text,
    price numeric
);
CREATE TABLE sc1.products_ref_2 (
	    product_no integer,
	    name text,
	    price numeric
);
CREATE TABLE sc1.products_ref_3 (
            product_no integer,
            name text,
            price numeric
);
SELECT create_reference_table('sc1.products_ref');
 create_reference_table
---------------------------------------------------------------------

(1 row)

SELECT create_reference_table('sc1.products_ref_3');
 create_reference_table
---------------------------------------------------------------------

(1 row)

-- Check for name collisions
ALTER TABLE sc1.products_ref_3 ADD CONSTRAINT products_ref_pkey PRIMARY KEY(name);
ALTER TABLE sc1.products_ref_2 ADD CONSTRAINT products_ref_pkey1 PRIMARY KEY(name);
ALTER TABLE sc1.products_ref ADD PRIMARY KEY(name);
SELECT con.conname
    FROM pg_catalog.pg_constraint con
      INNER JOIN pg_catalog.pg_class rel ON rel.oid = con.conrelid
      INNER JOIN pg_catalog.pg_namespace nsp ON nsp.oid = connamespace
              WHERE rel.relname = 'products_ref';
      conname
---------------------------------------------------------------------
 products_ref_pkey2
(1 row)

ALTER TABLE sc1.products_ref DROP CONSTRAINT products_ref_pkey2;
DROP TABLE sc1.products_ref;
-- Check with max table name (63 chars)
CREATE TABLE sc1.verylonglonglonglonglonglonglonglonglonglonglonglonglonglonglonger (
	            product_no integer,
	            name text,
                    price numeric
		);
NOTICE:  identifier "verylonglonglonglonglonglonglonglonglonglonglonglonglonglonglonger" will be truncated to "verylonglonglonglonglonglonglonglonglonglonglonglonglonglonglon"
SELECT create_distributed_table('sc1.verylonglonglonglonglonglonglonglonglonglonglonglonglonglonglon', 'product_no');
 create_distributed_table
---------------------------------------------------------------------

(1 row)

ALTER TABLE sc1.verylonglonglonglonglonglonglonglonglonglonglonglonglonglonglon ADD PRIMARY KEY(product_no);
-- Constraint should be created on the coordinator with a shortened name
SELECT con.conname
    FROM pg_catalog.pg_constraint con
      INNER JOIN pg_catalog.pg_class rel ON rel.oid = con.conrelid
      INNER JOIN pg_catalog.pg_namespace nsp ON nsp.oid = connamespace
              WHERE rel.relname LIKE 'very%';
                             conname
---------------------------------------------------------------------
 verylonglonglonglonglonglonglonglonglonglonglonglonglonglo_pkey
(1 row)

-- Constraints for the main table and the shards should be created on the worker with a shortened name
\c - - :public_worker_1_host :worker_1_port
SELECT con.conname
    FROM pg_catalog.pg_constraint con
      INNER JOIN pg_catalog.pg_class rel ON rel.oid = con.conrelid
      INNER JOIN pg_catalog.pg_namespace nsp ON nsp.oid = connamespace
		WHERE rel.relname LIKE 'very%' ORDER BY con.conname ASC;
                             conname
---------------------------------------------------------------------
 verylonglonglonglonglonglonglonglonglonglonglo_559ab79d_5410034
 verylonglonglonglonglonglonglonglonglonglonglo_559ab79d_5410035
 verylonglonglonglonglonglonglonglonglonglonglo_559ab79d_5410036
 verylonglonglonglonglonglonglonglonglonglonglo_559ab79d_5410037
 verylonglonglonglonglonglonglonglonglonglonglonglonglonglo_pkey
(5 rows)

-- Constraint can be deleted via the coordinator
\c - - :master_host :master_port
ALTER TABLE sc1.verylonglonglonglonglonglonglonglonglonglonglonglonglonglonglon DROP CONSTRAINT verylonglonglonglonglonglonglonglonglonglonglonglonglonglo_pkey;
\c - - :public_worker_1_host :worker_1_port
SELECT con.conname
    FROM pg_catalog.pg_constraint con
      INNER JOIN pg_catalog.pg_class rel ON rel.oid = con.conrelid
      INNER JOIN pg_catalog.pg_namespace nsp ON nsp.oid = connamespace
          WHERE rel.relname LIKE 'very%';
 conname
---------------------------------------------------------------------
(0 rows)

-- Test the scenario where a partitioned distributed table has a child with max allowed name
\c - - :master_host :master_port
CREATE TABLE dist_partitioned_table (dist_col int, another_col int, partition_col timestamp) PARTITION BY RANGE (partition_col);
CREATE TABLE  p1 PARTITION OF dist_partitioned_table FOR VALUES FROM ('2021-01-01') TO ('2022-01-01');
CREATE TABLE  longlonglonglonglonglonglonglonglonglonglonglonglonglonglongabc PARTITION OF dist_partitioned_table FOR VALUES FROM ('2020-01-01') TO ('2021-01-01');
SELECT create_distributed_table('dist_partitioned_table', 'partition_col');
 create_distributed_table
---------------------------------------------------------------------

(1 row)

ALTER TABLE dist_partitioned_table ADD PRIMARY KEY(partition_col);
SELECT con.conname
    FROM pg_catalog.pg_constraint con
      INNER JOIN pg_catalog.pg_class rel ON rel.oid = con.conrelid
      INNER JOIN pg_catalog.pg_namespace nsp ON nsp.oid = connamespace
          WHERE rel.relname = 'dist_partitioned_table';
           conname
---------------------------------------------------------------------
 dist_partitioned_table_pkey
(1 row)

\c - - :public_worker_1_host :worker_1_port
SELECT con.conname
    FROM pg_catalog.pg_constraint con
      INNER JOIN pg_catalog.pg_class rel ON rel.oid = con.conrelid
      INNER JOIN pg_catalog.pg_namespace nsp ON nsp.oid = connamespace
          WHERE rel.relname LIKE 'longlonglonglonglonglonglonglonglong%' ORDER BY con.conname ASC;
                             conname
---------------------------------------------------------------------
 longlonglonglonglonglonglonglonglonglonglonglo_9e4e3069_5410042
 longlonglonglonglonglonglonglonglonglonglonglo_9e4e3069_5410043
 longlonglonglonglonglonglonglonglonglonglonglo_9e4e3069_5410044
 longlonglonglonglonglonglonglonglonglonglonglo_9e4e3069_5410045
 longlonglonglonglonglonglonglonglonglonglonglonglonglonglo_pkey
(5 rows)

\c - - :master_host :master_port
ALTER TABLE dist_partitioned_table DROP CONSTRAINT dist_partitioned_table_pkey;
\c - - :public_worker_1_host :worker_1_port
SELECT con.conname
    FROM pg_catalog.pg_constraint con
      INNER JOIN pg_catalog.pg_class rel ON rel.oid = con.conrelid
      INNER JOIN pg_catalog.pg_namespace nsp ON nsp.oid = connamespace
          WHERE rel.relname LIKE 'longlonglonglonglonglonglonglonglong%' ORDER BY con.conname ASC;
 conname
---------------------------------------------------------------------
(0 rows)

\c - - :master_host :master_port
DROP SCHEMA sc1 CASCADE;
NOTICE:  drop cascades to 3 other objects
DETAIL:  drop cascades to table sc1.products_ref_2
drop cascades to table sc1.products_ref_3
drop cascades to table sc1.verylonglonglonglonglonglonglonglonglonglonglonglonglonglonglon
