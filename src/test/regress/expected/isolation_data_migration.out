Parsed test spec with 2 sessions

starting permutation: s2-begin s2-copy s1-create_distributed_table s2-commit s2-select
step s2-begin:
	BEGIN;

step s2-copy:
	COPY migration_table FROM PROGRAM 'echo 1,hello' WITH CSV;

step s1-create_distributed_table:
	SELECT create_distributed_table('migration_table', 'test_id');
 <waiting ...>
step s2-commit:
	COMMIT;

step s1-create_distributed_table: <... completed>
create_distributed_table


step s2-select:
	SELECT * FROM migration_table ORDER BY test_id;

test_id        data

1              hello

starting permutation: s1-begin s1-create_distributed_table s2-copy s1-commit s2-select
step s1-begin:
	BEGIN;

step s1-create_distributed_table:
	SELECT create_distributed_table('migration_table', 'test_id');

create_distributed_table


step s2-copy:
	COPY migration_table FROM PROGRAM 'echo 1,hello' WITH CSV;
 <waiting ...>
step s1-commit:
	COMMIT;

step s2-copy: <... completed>
step s2-select:
	SELECT * FROM migration_table ORDER BY test_id;

test_id        data

1              hello

starting permutation: s2-begin s2-insert s1-create_distributed_table s2-commit s2-select
step s2-begin:
	BEGIN;

step s2-insert:
	INSERT INTO migration_table VALUES (1, 'hello');

step s1-create_distributed_table:
	SELECT create_distributed_table('migration_table', 'test_id');
 <waiting ...>
step s2-commit:
	COMMIT;

step s1-create_distributed_table: <... completed>
create_distributed_table


step s2-select:
	SELECT * FROM migration_table ORDER BY test_id;

test_id        data

1              hello

starting permutation: s1-begin s1-create_distributed_table s2-insert s1-commit s2-select
step s1-begin:
	BEGIN;

step s1-create_distributed_table:
	SELECT create_distributed_table('migration_table', 'test_id');

create_distributed_table


step s2-insert:
	INSERT INTO migration_table VALUES (1, 'hello');
 <waiting ...>
step s1-commit:
	COMMIT;

step s2-insert: <... completed>
step s2-select:
	SELECT * FROM migration_table ORDER BY test_id;

test_id        data

1              hello

starting permutation: s1-begin-serializable s2-copy s1-create_distributed_table s1-commit s2-select
step s1-begin-serializable:
	BEGIN TRANSACTION ISOLATION LEVEL SERIALIZABLE;
	SELECT 1;

?column?

1
step s2-copy:
	COPY migration_table FROM PROGRAM 'echo 1,hello' WITH CSV;

step s1-create_distributed_table:
	SELECT create_distributed_table('migration_table', 'test_id');

create_distributed_table


step s1-commit:
	COMMIT;

step s2-select:
	SELECT * FROM migration_table ORDER BY test_id;

test_id        data

1              hello

starting permutation: s1-begin-serializable s2-insert s1-create_distributed_table s1-commit s2-select
step s1-begin-serializable:
	BEGIN TRANSACTION ISOLATION LEVEL SERIALIZABLE;
	SELECT 1;

?column?

1
step s2-insert:
	INSERT INTO migration_table VALUES (1, 'hello');

step s1-create_distributed_table:
	SELECT create_distributed_table('migration_table', 'test_id');

create_distributed_table


step s1-commit:
	COMMIT;

step s2-select:
	SELECT * FROM migration_table ORDER BY test_id;

test_id        data

1              hello
