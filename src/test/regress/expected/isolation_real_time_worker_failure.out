Parsed test spec with 2 sessions

starting permutation: gdb-break select fail-worker-backends continue commit
assign_distributed_transaction_id

               
pg_advisory_lock

               
step gdb-break: 
  WITH pid AS (
    SELECT pid FROM pg_stat_activity WHERE application_name = 'gdb-process'
  ) SELECT citus.gdb_attach(pid.pid) FROM pid;

  SELECT citus.run_command('!break BeginOrContinueCoordinatedTransaction');
  SELECT citus.run_command('continue');

gdb_attach     

               
run_command    

               
run_command    

               
step select: SELECT * FROM test_table; <waiting ...>
step fail-worker-backends: 
  SELECT master_run_on_worker(ARRAY['localhost'], ARRAY[57637], ARRAY['
   SELECT pg_terminate_backend(process_id)
   FROM get_all_active_transactions()
   WHERE transaction_number = 1000;
  '], false)

master_run_on_worker

(localhost,57637,t,"")
step continue: 
  SELECT pg_advisory_unlock_all();

pg_advisory_unlock_all

               
step select: <... completed>
a              b              

1              1              
5              5              
3              3              
4              4              
2              2              
step commit: COMMIT;
