Parsed test spec with 2 sessions

starting permutation: s1-begin s1-undistribute s2-undistribute s1-commit
step s1-begin:
    BEGIN;

step s1-undistribute:
    SELECT undistribute_table('dist_table');

undistribute_table
---------------------------------------------------------------------

(1 row)

step s2-undistribute:
    SELECT undistribute_table('dist_table');
 <waiting ...>
step s1-commit: 
    COMMIT;

step s2-undistribute: <... completed>
ERROR:  cannot complete operation because no such table exists

starting permutation: s1-begin s1-undistribute s2-select s1-commit
step s1-begin:
    BEGIN;

step s1-undistribute:
    SELECT undistribute_table('dist_table');

undistribute_table
---------------------------------------------------------------------

(1 row)

step s2-select:
    SELECT * FROM dist_table ORDER BY 1, 2;
 <waiting ...>
step s1-commit: 
    COMMIT;

step s2-select: <... completed>
a|b
---------------------------------------------------------------------
1|2
3|4
5|6
(3 rows)


starting permutation: s1-begin s1-undistribute s2-insert s1-commit s2-select
step s1-begin:
    BEGIN;

step s1-undistribute:
    SELECT undistribute_table('dist_table');

undistribute_table
---------------------------------------------------------------------

(1 row)

step s2-insert:
    INSERT INTO dist_table VALUES (7, 8), (9, 10);
 <waiting ...>
step s1-commit: 
    COMMIT;

step s2-insert: <... completed>
step s2-select:
    SELECT * FROM dist_table ORDER BY 1, 2;

a| b
---------------------------------------------------------------------
1| 2
3| 4
5| 6
7| 8
9|10
(5 rows)


starting permutation: s1-begin s1-undistribute s2-insert-select s1-commit s2-select
step s1-begin:
    BEGIN;

step s1-undistribute:
    SELECT undistribute_table('dist_table');

undistribute_table
---------------------------------------------------------------------

(1 row)

step s2-insert-select:
    INSERT INTO dist_table SELECT * FROM dist_table;
 <waiting ...>
step s1-commit: 
    COMMIT;

step s2-insert-select: <... completed>
step s2-select:
    SELECT * FROM dist_table ORDER BY 1, 2;

a|b
---------------------------------------------------------------------
1|2
1|2
3|4
3|4
5|6
5|6
(6 rows)


starting permutation: s1-begin s1-undistribute s2-delete s1-commit s2-select
step s1-begin:
    BEGIN;

step s1-undistribute:
    SELECT undistribute_table('dist_table');

undistribute_table
---------------------------------------------------------------------

(1 row)

step s2-delete:
    DELETE FROM dist_table WHERE a = 3;
 <waiting ...>
step s1-commit: 
    COMMIT;

step s2-delete: <... completed>
step s2-select:
    SELECT * FROM dist_table ORDER BY 1, 2;

a|b
---------------------------------------------------------------------
1|2
5|6
(2 rows)


starting permutation: s1-begin s1-undistribute s2-copy s1-commit s2-select
step s1-begin:
    BEGIN;

step s1-undistribute:
    SELECT undistribute_table('dist_table');

undistribute_table
---------------------------------------------------------------------

(1 row)

step s2-copy:
    COPY dist_table FROM PROGRAM 'echo 11, 12 && echo 13, 14' WITH CSV;
 <waiting ...>
step s1-commit: 
    COMMIT;

step s2-copy: <... completed>
step s2-select:
    SELECT * FROM dist_table ORDER BY 1, 2;

 a| b
---------------------------------------------------------------------
 1| 2
 3| 4
 5| 6
11|12
13|14
(5 rows)


starting permutation: s1-begin s1-undistribute s2-drop s1-commit s2-select
step s1-begin:
    BEGIN;

step s1-undistribute:
    SELECT undistribute_table('dist_table');

undistribute_table
---------------------------------------------------------------------

(1 row)

step s2-drop:
    DROP TABLE dist_table;
 <waiting ...>
step s1-commit: 
    COMMIT;

step s2-drop: <... completed>
step s2-select:
    SELECT * FROM dist_table ORDER BY 1, 2;

ERROR:  relation "dist_table" does not exist

starting permutation: s1-begin s1-undistribute s2-truncate s1-commit s2-select
step s1-begin:
    BEGIN;

step s1-undistribute:
    SELECT undistribute_table('dist_table');

undistribute_table
---------------------------------------------------------------------

(1 row)

step s2-truncate:
    TRUNCATE dist_table;
 <waiting ...>
step s1-commit: 
    COMMIT;

step s2-truncate: <... completed>
step s2-select:
    SELECT * FROM dist_table ORDER BY 1, 2;

a|b
---------------------------------------------------------------------
(0 rows)


starting permutation: s1-begin s1-undistribute s2-select-for-update s1-commit
step s1-begin:
    BEGIN;

step s1-undistribute:
    SELECT undistribute_table('dist_table');

undistribute_table
---------------------------------------------------------------------

(1 row)

step s2-select-for-update:
    SELECT * FROM dist_table WHERE a = 5 FOR UPDATE;
 <waiting ...>
step s1-commit: 
    COMMIT;

step s2-select-for-update: <... completed>
a|b
---------------------------------------------------------------------
5|6
(1 row)


starting permutation: s1-begin s1-undistribute s2-create-index-concurrently s1-commit
step s1-begin:
    BEGIN;

step s1-undistribute:
    SELECT undistribute_table('dist_table');

undistribute_table
---------------------------------------------------------------------

(1 row)

step s2-create-index-concurrently:
    CREATE INDEX CONCURRENTLY idx ON dist_table (a);
 <waiting ...>
step s1-commit: 
    COMMIT;

step s2-create-index-concurrently: <... completed>
