Parsed test spec with 3 sessions

starting permutation: s1-cache-connections s1-begin s2-begin s3-begin s1-alter-table s2-sleep s2-view-dist s3-view-worker s2-rollback s1-commit s3-rollback
create_distributed_table
---------------------------------------------------------------------

(1 row)

step s1-cache-connections:
    SET citus.max_cached_conns_per_worker TO 4;
    SET citus.force_max_query_parallelization TO on;
    UPDATE test_table SET column2 = 0;

step s1-begin:
    BEGIN;

step s2-begin:
 BEGIN;

step s3-begin:
 BEGIN;

step s1-alter-table:
    ALTER TABLE test_table ADD COLUMN x INT;

step s2-sleep:
 SELECT pg_sleep(0.5);

pg_sleep
---------------------------------------------------------------------

(1 row)

step s2-view-dist:
 SELECT query, citus_nodename_for_nodeid(citus_nodeid_for_gpid(global_pid)), citus_nodeport_for_nodeid(citus_nodeid_for_gpid(global_pid)), state, wait_event_type, wait_event, usename, datname FROM citus_dist_stat_activity WHERE query NOT ILIKE ALL(VALUES('%pg_prepared_xacts%'), ('%COMMIT%'), ('%BEGIN%'), ('%pg_catalog.pg_isolation_test_session_is_blocked%'), ('%citus_add_node%')) AND backend_type = 'client backend' ORDER BY query DESC;

query                                         |citus_nodename_for_nodeid|citus_nodeport_for_nodeid|state              |wait_event_type|wait_event|usename |datname
---------------------------------------------------------------------

    ALTER TABLE test_table ADD COLUMN x INT;
|localhost                |                    57636|idle in transaction|Client         |ClientRead|postgres|regression
(1 row)

step s3-view-worker:
 SELECT query, citus_nodename_for_nodeid(citus_nodeid_for_gpid(global_pid)), citus_nodeport_for_nodeid(citus_nodeid_for_gpid(global_pid)), state, wait_event_type, wait_event, usename, datname FROM citus_stat_activity WHERE query NOT ILIKE ALL(VALUES('%pg_prepared_xacts%'), ('%COMMIT%'), ('%csa_from_one_node%')) AND is_worker_query = true AND backend_type = 'client backend' ORDER BY query DESC;

query                                                                                                      |citus_nodename_for_nodeid|citus_nodeport_for_nodeid|state              |wait_event_type|wait_event|usename |datname
---------------------------------------------------------------------
SELECT worker_apply_shard_ddl_command (1300004, 'public', '
    ALTER TABLE test_table ADD COLUMN x INT;
')|localhost                |                    57636|idle in transaction|Client         |ClientRead|postgres|regression
SELECT worker_apply_shard_ddl_command (1300003, 'public', '
    ALTER TABLE test_table ADD COLUMN x INT;
')|localhost                |                    57636|idle in transaction|Client         |ClientRead|postgres|regression
SELECT worker_apply_shard_ddl_command (1300002, 'public', '
    ALTER TABLE test_table ADD COLUMN x INT;
')|localhost                |                    57636|idle in transaction|Client         |ClientRead|postgres|regression
SELECT worker_apply_shard_ddl_command (1300001, 'public', '
    ALTER TABLE test_table ADD COLUMN x INT;
')|localhost                |                    57636|idle in transaction|Client         |ClientRead|postgres|regression
(4 rows)

step s2-rollback:
 ROLLBACK;

step s1-commit:
    COMMIT;

step s3-rollback:
 ROLLBACK;


starting permutation: s1-cache-connections s1-begin s2-begin s3-begin s1-insert s2-sleep s2-view-dist s3-view-worker s2-rollback s1-commit s3-rollback
create_distributed_table
---------------------------------------------------------------------

(1 row)

step s1-cache-connections:
    SET citus.max_cached_conns_per_worker TO 4;
    SET citus.force_max_query_parallelization TO on;
    UPDATE test_table SET column2 = 0;

step s1-begin:
    BEGIN;

step s2-begin:
 BEGIN;

step s3-begin:
 BEGIN;

step s1-insert:
  INSERT INTO test_table VALUES (100, 100);

step s2-sleep:
 SELECT pg_sleep(0.5);

pg_sleep
---------------------------------------------------------------------

(1 row)

step s2-view-dist:
 SELECT query, citus_nodename_for_nodeid(citus_nodeid_for_gpid(global_pid)), citus_nodeport_for_nodeid(citus_nodeid_for_gpid(global_pid)), state, wait_event_type, wait_event, usename, datname FROM citus_dist_stat_activity WHERE query NOT ILIKE ALL(VALUES('%pg_prepared_xacts%'), ('%COMMIT%'), ('%BEGIN%'), ('%pg_catalog.pg_isolation_test_session_is_blocked%'), ('%citus_add_node%')) AND backend_type = 'client backend' ORDER BY query DESC;

query                                        |citus_nodename_for_nodeid|citus_nodeport_for_nodeid|state              |wait_event_type|wait_event|usename |datname
---------------------------------------------------------------------

  INSERT INTO test_table VALUES (100, 100);
|localhost                |                    57636|idle in transaction|Client         |ClientRead|postgres|regression
(1 row)

step s3-view-worker:
 SELECT query, citus_nodename_for_nodeid(citus_nodeid_for_gpid(global_pid)), citus_nodeport_for_nodeid(citus_nodeid_for_gpid(global_pid)), state, wait_event_type, wait_event, usename, datname FROM citus_stat_activity WHERE query NOT ILIKE ALL(VALUES('%pg_prepared_xacts%'), ('%COMMIT%'), ('%csa_from_one_node%')) AND is_worker_query = true AND backend_type = 'client backend' ORDER BY query DESC;

query                                                                     |citus_nodename_for_nodeid|citus_nodeport_for_nodeid|state              |wait_event_type|wait_event|usename |datname
---------------------------------------------------------------------
INSERT INTO public.test_table_1300003 (column1, column2) VALUES (100, 100)|localhost                |                    57636|idle in transaction|Client         |ClientRead|postgres|regression
(1 row)

step s2-rollback:
 ROLLBACK;

step s1-commit:
    COMMIT;

step s3-rollback:
 ROLLBACK;


starting permutation: s1-cache-connections s1-begin s2-begin s3-begin s1-select s2-sleep s2-view-dist s3-view-worker s2-rollback s1-commit s3-rollback
create_distributed_table
---------------------------------------------------------------------

(1 row)

step s1-cache-connections:
    SET citus.max_cached_conns_per_worker TO 4;
    SET citus.force_max_query_parallelization TO on;
    UPDATE test_table SET column2 = 0;

step s1-begin:
    BEGIN;

step s2-begin:
 BEGIN;

step s3-begin:
 BEGIN;

step s1-select:
   SELECT count(*) FROM test_table;

count
---------------------------------------------------------------------
    0
(1 row)

step s2-sleep:
 SELECT pg_sleep(0.5);

pg_sleep
---------------------------------------------------------------------

(1 row)

step s2-view-dist:
 SELECT query, citus_nodename_for_nodeid(citus_nodeid_for_gpid(global_pid)), citus_nodeport_for_nodeid(citus_nodeid_for_gpid(global_pid)), state, wait_event_type, wait_event, usename, datname FROM citus_dist_stat_activity WHERE query NOT ILIKE ALL(VALUES('%pg_prepared_xacts%'), ('%COMMIT%'), ('%BEGIN%'), ('%pg_catalog.pg_isolation_test_session_is_blocked%'), ('%citus_add_node%')) AND backend_type = 'client backend' ORDER BY query DESC;

query                                |citus_nodename_for_nodeid|citus_nodeport_for_nodeid|state              |wait_event_type|wait_event|usename |datname
---------------------------------------------------------------------

   SELECT count(*) FROM test_table;
|localhost                |                    57636|idle in transaction|Client         |ClientRead|postgres|regression
(1 row)

step s3-view-worker:
 SELECT query, citus_nodename_for_nodeid(citus_nodeid_for_gpid(global_pid)), citus_nodeport_for_nodeid(citus_nodeid_for_gpid(global_pid)), state, wait_event_type, wait_event, usename, datname FROM citus_stat_activity WHERE query NOT ILIKE ALL(VALUES('%pg_prepared_xacts%'), ('%COMMIT%'), ('%csa_from_one_node%')) AND is_worker_query = true AND backend_type = 'client backend' ORDER BY query DESC;

query                                                                        |citus_nodename_for_nodeid|citus_nodeport_for_nodeid|state              |wait_event_type|wait_event|usename |datname
---------------------------------------------------------------------
SELECT count(*) AS count FROM public.test_table_1300004 test_table WHERE true|localhost                |                    57636|idle in transaction|Client         |ClientRead|postgres|regression
SELECT count(*) AS count FROM public.test_table_1300003 test_table WHERE true|localhost                |                    57636|idle in transaction|Client         |ClientRead|postgres|regression
SELECT count(*) AS count FROM public.test_table_1300002 test_table WHERE true|localhost                |                    57636|idle in transaction|Client         |ClientRead|postgres|regression
SELECT count(*) AS count FROM public.test_table_1300001 test_table WHERE true|localhost                |                    57636|idle in transaction|Client         |ClientRead|postgres|regression
(4 rows)

step s2-rollback:
 ROLLBACK;

step s1-commit:
    COMMIT;

step s3-rollback:
 ROLLBACK;


starting permutation: s1-cache-connections s1-begin s2-begin s3-begin s1-select-router s2-sleep s2-view-dist s3-view-worker s2-rollback s1-commit s3-rollback
create_distributed_table
---------------------------------------------------------------------

(1 row)

step s1-cache-connections:
    SET citus.max_cached_conns_per_worker TO 4;
    SET citus.force_max_query_parallelization TO on;
    UPDATE test_table SET column2 = 0;

step s1-begin:
    BEGIN;

step s2-begin:
 BEGIN;

step s3-begin:
 BEGIN;

step s1-select-router:
   SELECT count(*) FROM test_table WHERE column1 = 55;

count
---------------------------------------------------------------------
    0
(1 row)

step s2-sleep:
 SELECT pg_sleep(0.5);

pg_sleep
---------------------------------------------------------------------

(1 row)

step s2-view-dist:
 SELECT query, citus_nodename_for_nodeid(citus_nodeid_for_gpid(global_pid)), citus_nodeport_for_nodeid(citus_nodeid_for_gpid(global_pid)), state, wait_event_type, wait_event, usename, datname FROM citus_dist_stat_activity WHERE query NOT ILIKE ALL(VALUES('%pg_prepared_xacts%'), ('%COMMIT%'), ('%BEGIN%'), ('%pg_catalog.pg_isolation_test_session_is_blocked%'), ('%citus_add_node%')) AND backend_type = 'client backend' ORDER BY query DESC;

query                                                   |citus_nodename_for_nodeid|citus_nodeport_for_nodeid|state              |wait_event_type|wait_event|usename |datname
---------------------------------------------------------------------

   SELECT count(*) FROM test_table WHERE column1 = 55;
|localhost                |                    57636|idle in transaction|Client         |ClientRead|postgres|regression
(1 row)

step s3-view-worker:
 SELECT query, citus_nodename_for_nodeid(citus_nodeid_for_gpid(global_pid)), citus_nodeport_for_nodeid(citus_nodeid_for_gpid(global_pid)), state, wait_event_type, wait_event, usename, datname FROM citus_stat_activity WHERE query NOT ILIKE ALL(VALUES('%pg_prepared_xacts%'), ('%COMMIT%'), ('%csa_from_one_node%')) AND is_worker_query = true AND backend_type = 'client backend' ORDER BY query DESC;

query                                                                                                       |citus_nodename_for_nodeid|citus_nodeport_for_nodeid|state              |wait_event_type|wait_event|usename |datname
---------------------------------------------------------------------
SELECT count(*) AS count FROM public.test_table_1300002 test_table WHERE (column1 OPERATOR(pg_catalog.=) 55)|localhost                |                    57636|idle in transaction|Client         |ClientRead|postgres|regression
(1 row)

step s2-rollback:
 ROLLBACK;

step s1-commit:
    COMMIT;

step s3-rollback:
 ROLLBACK;

