Parsed test spec with 2 sessions

starting permutation: attach
assign_distributed_transaction_id

               
pg_advisory_lock

               
step attach: 
  WITH pid AS (
    SELECT pid FROM pg_stat_activity WHERE application_name = 'gdb-process' LIMIT 1
  ) SELECT citus.gdb_attach(pid.pid) FROM pid;
  SELECT citus.run_command('continue');

gdb_attach     

               
run_command    

               
pg_advisory_unlock_all

               

starting permutation: break-after-begin update partition-worker continue commit reconnect-worker
assign_distributed_transaction_id

               
pg_advisory_lock

               
step break-after-begin: 
  -- we're already attached
  SELECT citus.run_command('!interrupt');

  -- fail one of the workers right after it's given a transaction id
  SELECT citus.run_command('!break FinishRemoteTransactionBegin');
  SELECT citus.run_command('continue');

run_command    

               
run_command    

               
run_command    

               
step update: 
  UPDATE test_table SET b = 2 WHERE a = 1; 
 <waiting ...>
step partition-worker: 
  SELECT citus.run_command('!worker-partition add 57637');

run_command    

               
step continue: 
  SELECT pg_advisory_unlock_all();

pg_advisory_unlock_all

               
step update: <... completed>
error in steps continue update: ERROR:  could not modify any active placements
step commit: 
  COMMIT;

step reconnect-worker: 
  SELECT citus.run_command('!worker-partition remove 57637');

run_command    

               
WARNING:  there is no transaction in progress
pg_advisory_unlock_all

               

starting permutation: break-after-begin update fail-worker-backends continue commit
assign_distributed_transaction_id

               
pg_advisory_lock

               
step break-after-begin: 
  -- we're already attached
  SELECT citus.run_command('!interrupt');

  -- fail one of the workers right after it's given a transaction id
  SELECT citus.run_command('!break FinishRemoteTransactionBegin');
  SELECT citus.run_command('continue');

run_command    

               
run_command    

               
run_command    

               
step update: 
  UPDATE test_table SET b = 2 WHERE a = 1; 
 <waiting ...>
step fail-worker-backends: 
  SELECT master_run_on_worker(ARRAY['localhost'], ARRAY[57637], ARRAY['
   WITH pids AS (
	   SELECT process_id, pg_terminate_backend(process_id)
	   FROM get_all_active_transactions()
	   WHERE transaction_number = 1000
  ) SELECT count(1) FROM pids; -- array_agg(process_id) FROM pids;
  '], false)

master_run_on_worker

(localhost,57637,t,2)
step continue: 
  SELECT pg_advisory_unlock_all();

pg_advisory_unlock_all

               
step update: <... completed>
error in steps continue update: ERROR:  terminating connection due to administrator command
step commit: 
  COMMIT;

WARNING:  there is no transaction in progress
pg_advisory_unlock_all

               

starting permutation: break-before-send update fail-worker-backends continue commit
assign_distributed_transaction_id

               
pg_advisory_lock

               
step break-before-send: 
  -- we're already attached
  SELECT citus.run_command('!interrupt');

  -- fail the worker just before we send it a command
  SELECT citus.run_command('!break SendQueryInSingleRowMode');
  SELECT citus.run_command('continue');

run_command    

               
run_command    

               
run_command    

               
step update: 
  UPDATE test_table SET b = 2 WHERE a = 1; 
 <waiting ...>
step fail-worker-backends: 
  SELECT master_run_on_worker(ARRAY['localhost'], ARRAY[57637], ARRAY['
   WITH pids AS (
	   SELECT process_id, pg_terminate_backend(process_id)
	   FROM get_all_active_transactions()
	   WHERE transaction_number = 1000
  ) SELECT count(1) FROM pids; -- array_agg(process_id) FROM pids;
  '], false)

master_run_on_worker

(localhost,57637,t,1)
step continue: 
  SELECT pg_advisory_unlock_all();

pg_advisory_unlock_all

               
step update: <... completed>
error in steps continue update: ERROR:  terminating connection due to administrator command
step commit: 
  COMMIT;

WARNING:  there is no transaction in progress
pg_advisory_unlock_all

               
