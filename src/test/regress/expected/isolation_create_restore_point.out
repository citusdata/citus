Parsed test spec with 2 sessions

starting permutation: s1-begin s1-create-distributed s2-create-restore s1-commit
create_reference_table

               
step s1-begin: 
	BEGIN;
	SET citus.multi_shard_commit_protocol TO '2pc';

step s1-create-distributed: 
	CREATE TABLE test_create_distributed_table (test_id integer NOT NULL, data text);
	SELECT create_distributed_table('test_create_distributed_table', 'test_id');

create_distributed_table

               
step s2-create-restore: 
	SELECT 1 FROM citus_create_restore_point('citus-test');
 <waiting ...>
step s1-commit: 
	COMMIT;

step s2-create-restore: <... completed>
?column?       

1              

starting permutation: s1-begin s1-insert s2-create-restore s1-commit
create_reference_table

               
step s1-begin: 
	BEGIN;
	SET citus.multi_shard_commit_protocol TO '2pc';

step s1-insert: 
	INSERT INTO restore_table VALUES (1,'hello');

step s2-create-restore: 
	SELECT 1 FROM citus_create_restore_point('citus-test');

?column?       

1              
step s1-commit: 
	COMMIT;


starting permutation: s1-begin s1-modify-multiple s2-create-restore s1-commit
create_reference_table

               
step s1-begin: 
	BEGIN;
	SET citus.multi_shard_commit_protocol TO '2pc';

step s1-modify-multiple: 
	UPDATE restore_table SET data = 'world';

step s2-create-restore: 
	SELECT 1 FROM citus_create_restore_point('citus-test');

?column?       

1              
step s1-commit: 
	COMMIT;


starting permutation: s1-begin s1-ddl s2-create-restore s1-commit
create_reference_table

               
step s1-begin: 
	BEGIN;
	SET citus.multi_shard_commit_protocol TO '2pc';

step s1-ddl: 
	ALTER TABLE restore_table ADD COLUMN x int;

step s2-create-restore: 
	SELECT 1 FROM citus_create_restore_point('citus-test');

?column?       

1              
step s1-commit: 
	COMMIT;


starting permutation: s1-begin s1-copy s2-create-restore s1-commit
create_reference_table

               
step s1-begin: 
	BEGIN;
	SET citus.multi_shard_commit_protocol TO '2pc';

step s1-copy: 
	COPY restore_table FROM PROGRAM 'echo 1,hello' WITH CSV;

step s2-create-restore: 
	SELECT 1 FROM citus_create_restore_point('citus-test');

?column?       

1              
step s1-commit: 
	COMMIT;


starting permutation: s1-begin s1-recover s2-create-restore s1-commit
create_reference_table

               
step s1-begin: 
	BEGIN;
	SET citus.multi_shard_commit_protocol TO '2pc';

step s1-recover: 
	SELECT recover_prepared_transactions();

recover_prepared_transactions

0              
step s2-create-restore: 
	SELECT 1 FROM citus_create_restore_point('citus-test');
 <waiting ...>
step s1-commit: 
	COMMIT;

step s2-create-restore: <... completed>
?column?       

1              

starting permutation: s1-begin s1-drop s2-create-restore s1-commit
create_reference_table

               
step s1-begin: 
	BEGIN;
	SET citus.multi_shard_commit_protocol TO '2pc';

step s1-drop: 
	DROP TABLE restore_table;

step s2-create-restore: 
	SELECT 1 FROM citus_create_restore_point('citus-test');
 <waiting ...>
step s1-commit: 
	COMMIT;

step s2-create-restore: <... completed>
?column?       

1              

starting permutation: s1-begin s1-add-node s2-create-restore s1-commit
create_reference_table

               
step s1-begin: 
	BEGIN;
	SET citus.multi_shard_commit_protocol TO '2pc';

step s1-add-node: 
	SELECT 1 FROM master_add_inactive_node('localhost', 9999);

?column?       

1              
step s2-create-restore: 
	SELECT 1 FROM citus_create_restore_point('citus-test');
 <waiting ...>
step s1-commit: 
	COMMIT;

step s2-create-restore: <... completed>
?column?       

1              

starting permutation: s1-begin s1-remove-node s2-create-restore s1-commit
create_reference_table

               
step s1-begin: 
	BEGIN;
	SET citus.multi_shard_commit_protocol TO '2pc';

step s1-remove-node: 
	SELECT master_remove_node('localhost', 9999);

master_remove_node

               
step s2-create-restore: 
	SELECT 1 FROM citus_create_restore_point('citus-test');
 <waiting ...>
step s1-commit: 
	COMMIT;

step s2-create-restore: <... completed>
?column?       

1              

starting permutation: s1-begin s1-create-restore s2-create-restore s1-commit
create_reference_table

               
step s1-begin: 
	BEGIN;
	SET citus.multi_shard_commit_protocol TO '2pc';

step s1-create-restore: 
	SELECT 1 FROM citus_create_restore_point('citus-test-2');

?column?       

1              
step s2-create-restore: 
	SELECT 1 FROM citus_create_restore_point('citus-test');
 <waiting ...>
step s1-commit: 
	COMMIT;

step s2-create-restore: <... completed>
?column?       

1              

starting permutation: s2-begin s2-create-restore s1-modify-multiple s2-commit
create_reference_table

               
step s2-begin: 
	BEGIN;

step s2-create-restore: 
	SELECT 1 FROM citus_create_restore_point('citus-test');

?column?       

1              
step s1-modify-multiple: 
	UPDATE restore_table SET data = 'world';
 <waiting ...>
step s2-commit: 
	COMMIT;

step s1-modify-multiple: <... completed>

starting permutation: s2-begin s2-create-restore s1-ddl s2-commit
create_reference_table

               
step s2-begin: 
	BEGIN;

step s2-create-restore: 
	SELECT 1 FROM citus_create_restore_point('citus-test');

?column?       

1              
step s1-ddl: 
	ALTER TABLE restore_table ADD COLUMN x int;
 <waiting ...>
step s2-commit: 
	COMMIT;

step s1-ddl: <... completed>

starting permutation: s2-begin s2-create-restore s1-multi-statement s2-commit
create_reference_table

               
step s2-begin: 
	BEGIN;

step s2-create-restore: 
	SELECT 1 FROM citus_create_restore_point('citus-test');

?column?       

1              
step s1-multi-statement: 
	SET citus.multi_shard_commit_protocol TO '2pc';
	BEGIN;
	INSERT INTO restore_table VALUES (1,'hello');
	INSERT INTO restore_table VALUES (2,'hello');
	COMMIT;
 <waiting ...>
step s2-commit: 
	COMMIT;

step s1-multi-statement: <... completed>

starting permutation: s1-begin s1-create-reference s2-create-restore s1-commit
create_reference_table

               
step s1-begin: 
	BEGIN;
	SET citus.multi_shard_commit_protocol TO '2pc';

step s1-create-reference: 
	CREATE TABLE test_create_reference_table (test_id integer NOT NULL, data text);
	SELECT create_reference_table('test_create_reference_table');

create_reference_table

               
step s2-create-restore: 
	SELECT 1 FROM citus_create_restore_point('citus-test');
 <waiting ...>
step s1-commit: 
	COMMIT;

step s2-create-restore: <... completed>
?column?       

1              

starting permutation: s1-begin s1-insert-ref s2-create-restore s1-commit
create_reference_table

               
step s1-begin: 
	BEGIN;
	SET citus.multi_shard_commit_protocol TO '2pc';

step s1-insert-ref: 
	INSERT INTO restore_ref_table VALUES (1,'hello');

step s2-create-restore: 
	SELECT 1 FROM citus_create_restore_point('citus-test');

?column?       

1              
step s1-commit: 
	COMMIT;


starting permutation: s1-begin s1-modify-multiple-ref s2-create-restore s1-commit
create_reference_table

               
step s1-begin: 
	BEGIN;
	SET citus.multi_shard_commit_protocol TO '2pc';

step s1-modify-multiple-ref: 
	UPDATE restore_ref_table SET data = 'world';

step s2-create-restore: 
	SELECT 1 FROM citus_create_restore_point('citus-test');

?column?       

1              
step s1-commit: 
	COMMIT;


starting permutation: s1-begin s1-ddl-ref s2-create-restore s1-commit
create_reference_table

               
step s1-begin: 
	BEGIN;
	SET citus.multi_shard_commit_protocol TO '2pc';

step s1-ddl-ref: 
	ALTER TABLE restore_ref_table ADD COLUMN x int;

step s2-create-restore: 
	SELECT 1 FROM citus_create_restore_point('citus-test');
 <waiting ...>
step s1-commit: 
	COMMIT;

step s2-create-restore: <... completed>
?column?       

1              

starting permutation: s1-begin s1-copy-ref s2-create-restore s1-commit
create_reference_table

               
step s1-begin: 
	BEGIN;
	SET citus.multi_shard_commit_protocol TO '2pc';

step s1-copy-ref: 
	COPY restore_ref_table FROM PROGRAM 'echo 1,hello' WITH CSV;

step s2-create-restore: 
	SELECT 1 FROM citus_create_restore_point('citus-test');

?column?       

1              
step s1-commit: 
	COMMIT;


starting permutation: s1-begin s1-drop-ref s2-create-restore s1-commit
create_reference_table

               
step s1-begin: 
	BEGIN;
	SET citus.multi_shard_commit_protocol TO '2pc';

step s1-drop-ref: 
	DROP TABLE restore_ref_table;

step s2-create-restore: 
	SELECT 1 FROM citus_create_restore_point('citus-test');
 <waiting ...>
step s1-commit: 
	COMMIT;

step s2-create-restore: <... completed>
?column?       

1              

starting permutation: s2-begin s2-create-restore s1-modify-multiple-ref s2-commit
create_reference_table

               
step s2-begin: 
	BEGIN;

step s2-create-restore: 
	SELECT 1 FROM citus_create_restore_point('citus-test');

?column?       

1              
step s1-modify-multiple-ref: 
	UPDATE restore_ref_table SET data = 'world';
 <waiting ...>
step s2-commit: 
	COMMIT;

step s1-modify-multiple-ref: <... completed>

starting permutation: s2-begin s2-create-restore s1-ddl-ref s2-commit
create_reference_table

               
step s2-begin: 
	BEGIN;

step s2-create-restore: 
	SELECT 1 FROM citus_create_restore_point('citus-test');

?column?       

1              
step s1-ddl-ref: 
	ALTER TABLE restore_ref_table ADD COLUMN x int;
 <waiting ...>
step s2-commit: 
	COMMIT;

step s1-ddl-ref: <... completed>

starting permutation: s2-begin s2-create-restore s1-multi-statement-ref s2-commit
create_reference_table

               
step s2-begin: 
	BEGIN;

step s2-create-restore: 
	SELECT 1 FROM citus_create_restore_point('citus-test');

?column?       

1              
step s1-multi-statement-ref: 
	SET citus.multi_shard_commit_protocol TO '2pc';
	BEGIN;
	INSERT INTO restore_ref_table VALUES (1,'hello');
	INSERT INTO restore_ref_table VALUES (2,'hello');
	COMMIT;
 <waiting ...>
step s2-commit: 
	COMMIT;

step s1-multi-statement-ref: <... completed>
