Parsed test spec with 2 sessions

starting permutation: s2-start-session-level-connection s2-begin-on-worker s2-update-table-1 s1-start-session-level-connection s1-view-locks s2-rollback-worker s1-view-locks s1-stop-connection s2-stop-connection
step s2-start-session-level-connection:
	SELECT start_session_level_connection_to_node('localhost', 57637);

start_session_level_connection_to_node


step s2-begin-on-worker:
	SELECT run_commands_on_session_level_connection_to_node('BEGIN');

run_commands_on_session_level_connection_to_node


step s2-update-table-1:
    SELECT run_commands_on_session_level_connection_to_node('UPDATE ref_table_1 SET id = 2 WHERE id = 1');

run_commands_on_session_level_connection_to_node


step s1-start-session-level-connection:
	SELECT start_session_level_connection_to_node('localhost', 57637);

start_session_level_connection_to_node


step s1-view-locks:
    SELECT * FROM master_run_on_worker(
		ARRAY['localhost']::text[],
		ARRAY[57637]::int[],
		ARRAY[$$
          SELECT array_agg(ROW(t.mode, t.count) ORDER BY t.mode) FROM
          (SELECT mode, count(*) count FROM pg_locks
           WHERE locktype='advisory' GROUP BY mode) t$$]::text[],
		false);

node_name      node_port      success        result

localhost      57637          t              {"(ExclusiveLock,1)","(ShareLock,1)"}
step s2-rollback-worker:
    SELECT run_commands_on_session_level_connection_to_node('ROLLBACK');

run_commands_on_session_level_connection_to_node


step s1-view-locks:
    SELECT * FROM master_run_on_worker(
		ARRAY['localhost']::text[],
		ARRAY[57637]::int[],
		ARRAY[$$
          SELECT array_agg(ROW(t.mode, t.count) ORDER BY t.mode) FROM
          (SELECT mode, count(*) count FROM pg_locks
           WHERE locktype='advisory' GROUP BY mode) t$$]::text[],
		false);

node_name      node_port      success        result

localhost      57637          t
step s1-stop-connection:
	SELECT stop_session_level_connection_to_node();

stop_session_level_connection_to_node


step s2-stop-connection:
	SELECT stop_session_level_connection_to_node();

stop_session_level_connection_to_node


restore_isolation_tester_func



starting permutation: s2-start-session-level-connection s2-begin-on-worker s2-delete-table-1 s1-start-session-level-connection s1-view-locks s2-rollback-worker s1-view-locks s1-stop-connection s2-stop-connection
step s2-start-session-level-connection:
	SELECT start_session_level_connection_to_node('localhost', 57637);

start_session_level_connection_to_node


step s2-begin-on-worker:
	SELECT run_commands_on_session_level_connection_to_node('BEGIN');

run_commands_on_session_level_connection_to_node


step s2-delete-table-1:
    SELECT run_commands_on_session_level_connection_to_node('DELETE FROM ref_table_1 WHERE id = 1');

run_commands_on_session_level_connection_to_node


step s1-start-session-level-connection:
	SELECT start_session_level_connection_to_node('localhost', 57637);

start_session_level_connection_to_node


step s1-view-locks:
    SELECT * FROM master_run_on_worker(
		ARRAY['localhost']::text[],
		ARRAY[57637]::int[],
		ARRAY[$$
          SELECT array_agg(ROW(t.mode, t.count) ORDER BY t.mode) FROM
          (SELECT mode, count(*) count FROM pg_locks
           WHERE locktype='advisory' GROUP BY mode) t$$]::text[],
		false);

node_name      node_port      success        result

localhost      57637          t              {"(ExclusiveLock,1)","(ShareLock,1)"}
step s2-rollback-worker:
    SELECT run_commands_on_session_level_connection_to_node('ROLLBACK');

run_commands_on_session_level_connection_to_node


step s1-view-locks:
    SELECT * FROM master_run_on_worker(
		ARRAY['localhost']::text[],
		ARRAY[57637]::int[],
		ARRAY[$$
          SELECT array_agg(ROW(t.mode, t.count) ORDER BY t.mode) FROM
          (SELECT mode, count(*) count FROM pg_locks
           WHERE locktype='advisory' GROUP BY mode) t$$]::text[],
		false);

node_name      node_port      success        result

localhost      57637          t
step s1-stop-connection:
	SELECT stop_session_level_connection_to_node();

stop_session_level_connection_to_node


step s2-stop-connection:
	SELECT stop_session_level_connection_to_node();

stop_session_level_connection_to_node


restore_isolation_tester_func



starting permutation: s2-start-session-level-connection s2-begin-on-worker s2-update-table-2 s1-start-session-level-connection s1-view-locks s2-rollback-worker s1-view-locks s1-stop-connection s2-stop-connection
step s2-start-session-level-connection:
	SELECT start_session_level_connection_to_node('localhost', 57637);

start_session_level_connection_to_node


step s2-begin-on-worker:
	SELECT run_commands_on_session_level_connection_to_node('BEGIN');

run_commands_on_session_level_connection_to_node


step s2-update-table-2:
    SELECT run_commands_on_session_level_connection_to_node('UPDATE ref_table_2 SET id = 2 WHERE id = 1');

run_commands_on_session_level_connection_to_node


step s1-start-session-level-connection:
	SELECT start_session_level_connection_to_node('localhost', 57637);

start_session_level_connection_to_node


step s1-view-locks:
    SELECT * FROM master_run_on_worker(
		ARRAY['localhost']::text[],
		ARRAY[57637]::int[],
		ARRAY[$$
          SELECT array_agg(ROW(t.mode, t.count) ORDER BY t.mode) FROM
          (SELECT mode, count(*) count FROM pg_locks
           WHERE locktype='advisory' GROUP BY mode) t$$]::text[],
		false);

node_name      node_port      success        result

localhost      57637          t              {"(ExclusiveLock,2)","(ShareLock,1)"}
step s2-rollback-worker:
    SELECT run_commands_on_session_level_connection_to_node('ROLLBACK');

run_commands_on_session_level_connection_to_node


step s1-view-locks:
    SELECT * FROM master_run_on_worker(
		ARRAY['localhost']::text[],
		ARRAY[57637]::int[],
		ARRAY[$$
          SELECT array_agg(ROW(t.mode, t.count) ORDER BY t.mode) FROM
          (SELECT mode, count(*) count FROM pg_locks
           WHERE locktype='advisory' GROUP BY mode) t$$]::text[],
		false);

node_name      node_port      success        result

localhost      57637          t
step s1-stop-connection:
	SELECT stop_session_level_connection_to_node();

stop_session_level_connection_to_node


step s2-stop-connection:
	SELECT stop_session_level_connection_to_node();

stop_session_level_connection_to_node


restore_isolation_tester_func



starting permutation: s2-start-session-level-connection s2-begin-on-worker s2-delete-table-2 s1-start-session-level-connection s1-view-locks s2-rollback-worker s1-view-locks s1-stop-connection s2-stop-connection
step s2-start-session-level-connection:
	SELECT start_session_level_connection_to_node('localhost', 57637);

start_session_level_connection_to_node


step s2-begin-on-worker:
	SELECT run_commands_on_session_level_connection_to_node('BEGIN');

run_commands_on_session_level_connection_to_node


step s2-delete-table-2:
    SELECT run_commands_on_session_level_connection_to_node('DELETE FROM ref_table_2 WHERE id = 1');

run_commands_on_session_level_connection_to_node


step s1-start-session-level-connection:
	SELECT start_session_level_connection_to_node('localhost', 57637);

start_session_level_connection_to_node


step s1-view-locks:
    SELECT * FROM master_run_on_worker(
		ARRAY['localhost']::text[],
		ARRAY[57637]::int[],
		ARRAY[$$
          SELECT array_agg(ROW(t.mode, t.count) ORDER BY t.mode) FROM
          (SELECT mode, count(*) count FROM pg_locks
           WHERE locktype='advisory' GROUP BY mode) t$$]::text[],
		false);

node_name      node_port      success        result

localhost      57637          t              {"(ExclusiveLock,2)","(ShareLock,1)"}
step s2-rollback-worker:
    SELECT run_commands_on_session_level_connection_to_node('ROLLBACK');

run_commands_on_session_level_connection_to_node


step s1-view-locks:
    SELECT * FROM master_run_on_worker(
		ARRAY['localhost']::text[],
		ARRAY[57637]::int[],
		ARRAY[$$
          SELECT array_agg(ROW(t.mode, t.count) ORDER BY t.mode) FROM
          (SELECT mode, count(*) count FROM pg_locks
           WHERE locktype='advisory' GROUP BY mode) t$$]::text[],
		false);

node_name      node_port      success        result

localhost      57637          t
step s1-stop-connection:
	SELECT stop_session_level_connection_to_node();

stop_session_level_connection_to_node


step s2-stop-connection:
	SELECT stop_session_level_connection_to_node();

stop_session_level_connection_to_node


restore_isolation_tester_func



starting permutation: s2-start-session-level-connection s2-begin-on-worker s2-update-table-3 s1-start-session-level-connection s1-view-locks s2-rollback-worker s1-view-locks s1-stop-connection s2-stop-connection
step s2-start-session-level-connection:
	SELECT start_session_level_connection_to_node('localhost', 57637);

start_session_level_connection_to_node


step s2-begin-on-worker:
	SELECT run_commands_on_session_level_connection_to_node('BEGIN');

run_commands_on_session_level_connection_to_node


step s2-update-table-3:
    SELECT run_commands_on_session_level_connection_to_node('UPDATE ref_table_3 SET id = 2 WHERE id = 1');

run_commands_on_session_level_connection_to_node


step s1-start-session-level-connection:
	SELECT start_session_level_connection_to_node('localhost', 57637);

start_session_level_connection_to_node


step s1-view-locks:
    SELECT * FROM master_run_on_worker(
		ARRAY['localhost']::text[],
		ARRAY[57637]::int[],
		ARRAY[$$
          SELECT array_agg(ROW(t.mode, t.count) ORDER BY t.mode) FROM
          (SELECT mode, count(*) count FROM pg_locks
           WHERE locktype='advisory' GROUP BY mode) t$$]::text[],
		false);

node_name      node_port      success        result

localhost      57637          t              {"(ExclusiveLock,3)","(ShareLock,1)"}
step s2-rollback-worker:
    SELECT run_commands_on_session_level_connection_to_node('ROLLBACK');

run_commands_on_session_level_connection_to_node


step s1-view-locks:
    SELECT * FROM master_run_on_worker(
		ARRAY['localhost']::text[],
		ARRAY[57637]::int[],
		ARRAY[$$
          SELECT array_agg(ROW(t.mode, t.count) ORDER BY t.mode) FROM
          (SELECT mode, count(*) count FROM pg_locks
           WHERE locktype='advisory' GROUP BY mode) t$$]::text[],
		false);

node_name      node_port      success        result

localhost      57637          t
step s1-stop-connection:
	SELECT stop_session_level_connection_to_node();

stop_session_level_connection_to_node


step s2-stop-connection:
	SELECT stop_session_level_connection_to_node();

stop_session_level_connection_to_node


restore_isolation_tester_func



starting permutation: s2-start-session-level-connection s2-begin-on-worker s2-delete-table-3 s1-start-session-level-connection s1-view-locks s2-rollback-worker s1-view-locks s1-stop-connection s2-stop-connection
step s2-start-session-level-connection:
	SELECT start_session_level_connection_to_node('localhost', 57637);

start_session_level_connection_to_node


step s2-begin-on-worker:
	SELECT run_commands_on_session_level_connection_to_node('BEGIN');

run_commands_on_session_level_connection_to_node


step s2-delete-table-3:
    SELECT run_commands_on_session_level_connection_to_node('DELETE FROM ref_table_3 WHERE id = 1');

run_commands_on_session_level_connection_to_node


step s1-start-session-level-connection:
	SELECT start_session_level_connection_to_node('localhost', 57637);

start_session_level_connection_to_node


step s1-view-locks:
    SELECT * FROM master_run_on_worker(
		ARRAY['localhost']::text[],
		ARRAY[57637]::int[],
		ARRAY[$$
          SELECT array_agg(ROW(t.mode, t.count) ORDER BY t.mode) FROM
          (SELECT mode, count(*) count FROM pg_locks
           WHERE locktype='advisory' GROUP BY mode) t$$]::text[],
		false);

node_name      node_port      success        result

localhost      57637          t              {"(ExclusiveLock,3)","(ShareLock,1)"}
step s2-rollback-worker:
    SELECT run_commands_on_session_level_connection_to_node('ROLLBACK');

run_commands_on_session_level_connection_to_node


step s1-view-locks:
    SELECT * FROM master_run_on_worker(
		ARRAY['localhost']::text[],
		ARRAY[57637]::int[],
		ARRAY[$$
          SELECT array_agg(ROW(t.mode, t.count) ORDER BY t.mode) FROM
          (SELECT mode, count(*) count FROM pg_locks
           WHERE locktype='advisory' GROUP BY mode) t$$]::text[],
		false);

node_name      node_port      success        result

localhost      57637          t
step s1-stop-connection:
	SELECT stop_session_level_connection_to_node();

stop_session_level_connection_to_node


step s2-stop-connection:
	SELECT stop_session_level_connection_to_node();

stop_session_level_connection_to_node


restore_isolation_tester_func



starting permutation: s2-start-session-level-connection s2-begin-on-worker s2-insert-table-1 s1-start-session-level-connection s1-view-locks s2-rollback-worker s1-view-locks s1-stop-connection s2-stop-connection
step s2-start-session-level-connection:
	SELECT start_session_level_connection_to_node('localhost', 57637);

start_session_level_connection_to_node


step s2-begin-on-worker:
	SELECT run_commands_on_session_level_connection_to_node('BEGIN');

run_commands_on_session_level_connection_to_node


step s2-insert-table-1:
    SELECT run_commands_on_session_level_connection_to_node('INSERT INTO ref_table_1 VALUES (7, 7)');

run_commands_on_session_level_connection_to_node


step s1-start-session-level-connection:
	SELECT start_session_level_connection_to_node('localhost', 57637);

start_session_level_connection_to_node


step s1-view-locks:
    SELECT * FROM master_run_on_worker(
		ARRAY['localhost']::text[],
		ARRAY[57637]::int[],
		ARRAY[$$
          SELECT array_agg(ROW(t.mode, t.count) ORDER BY t.mode) FROM
          (SELECT mode, count(*) count FROM pg_locks
           WHERE locktype='advisory' GROUP BY mode) t$$]::text[],
		false);

node_name      node_port      success        result

localhost      57637          t              {"(RowExclusiveLock,1)","(ShareLock,1)"}
step s2-rollback-worker:
    SELECT run_commands_on_session_level_connection_to_node('ROLLBACK');

run_commands_on_session_level_connection_to_node


step s1-view-locks:
    SELECT * FROM master_run_on_worker(
		ARRAY['localhost']::text[],
		ARRAY[57637]::int[],
		ARRAY[$$
          SELECT array_agg(ROW(t.mode, t.count) ORDER BY t.mode) FROM
          (SELECT mode, count(*) count FROM pg_locks
           WHERE locktype='advisory' GROUP BY mode) t$$]::text[],
		false);

node_name      node_port      success        result

localhost      57637          t
step s1-stop-connection:
	SELECT stop_session_level_connection_to_node();

stop_session_level_connection_to_node


step s2-stop-connection:
	SELECT stop_session_level_connection_to_node();

stop_session_level_connection_to_node


restore_isolation_tester_func



starting permutation: s2-start-session-level-connection s2-begin-on-worker s2-insert-table-2 s1-start-session-level-connection s1-view-locks s2-rollback-worker s1-view-locks s1-stop-connection s2-stop-connection
step s2-start-session-level-connection:
	SELECT start_session_level_connection_to_node('localhost', 57637);

start_session_level_connection_to_node


step s2-begin-on-worker:
	SELECT run_commands_on_session_level_connection_to_node('BEGIN');

run_commands_on_session_level_connection_to_node


step s2-insert-table-2:
    SELECT run_commands_on_session_level_connection_to_node('INSERT INTO ref_table_2 VALUES (7, 5)');

run_commands_on_session_level_connection_to_node


step s1-start-session-level-connection:
	SELECT start_session_level_connection_to_node('localhost', 57637);

start_session_level_connection_to_node


step s1-view-locks:
    SELECT * FROM master_run_on_worker(
		ARRAY['localhost']::text[],
		ARRAY[57637]::int[],
		ARRAY[$$
          SELECT array_agg(ROW(t.mode, t.count) ORDER BY t.mode) FROM
          (SELECT mode, count(*) count FROM pg_locks
           WHERE locktype='advisory' GROUP BY mode) t$$]::text[],
		false);

node_name      node_port      success        result

localhost      57637          t              {"(RowExclusiveLock,2)","(ShareLock,1)"}
step s2-rollback-worker:
    SELECT run_commands_on_session_level_connection_to_node('ROLLBACK');

run_commands_on_session_level_connection_to_node


step s1-view-locks:
    SELECT * FROM master_run_on_worker(
		ARRAY['localhost']::text[],
		ARRAY[57637]::int[],
		ARRAY[$$
          SELECT array_agg(ROW(t.mode, t.count) ORDER BY t.mode) FROM
          (SELECT mode, count(*) count FROM pg_locks
           WHERE locktype='advisory' GROUP BY mode) t$$]::text[],
		false);

node_name      node_port      success        result

localhost      57637          t
step s1-stop-connection:
	SELECT stop_session_level_connection_to_node();

stop_session_level_connection_to_node


step s2-stop-connection:
	SELECT stop_session_level_connection_to_node();

stop_session_level_connection_to_node


restore_isolation_tester_func



starting permutation: s2-start-session-level-connection s2-begin-on-worker s2-insert-table-3 s1-start-session-level-connection s1-view-locks s2-rollback-worker s1-view-locks s1-stop-connection s2-stop-connection
step s2-start-session-level-connection:
	SELECT start_session_level_connection_to_node('localhost', 57637);

start_session_level_connection_to_node


step s2-begin-on-worker:
	SELECT run_commands_on_session_level_connection_to_node('BEGIN');

run_commands_on_session_level_connection_to_node


step s2-insert-table-3:
    SELECT run_commands_on_session_level_connection_to_node('INSERT INTO ref_table_3 VALUES (7, 5)');

run_commands_on_session_level_connection_to_node


step s1-start-session-level-connection:
	SELECT start_session_level_connection_to_node('localhost', 57637);

start_session_level_connection_to_node


step s1-view-locks:
    SELECT * FROM master_run_on_worker(
		ARRAY['localhost']::text[],
		ARRAY[57637]::int[],
		ARRAY[$$
          SELECT array_agg(ROW(t.mode, t.count) ORDER BY t.mode) FROM
          (SELECT mode, count(*) count FROM pg_locks
           WHERE locktype='advisory' GROUP BY mode) t$$]::text[],
		false);

node_name      node_port      success        result

localhost      57637          t              {"(RowExclusiveLock,3)","(ShareLock,1)"}
step s2-rollback-worker:
    SELECT run_commands_on_session_level_connection_to_node('ROLLBACK');

run_commands_on_session_level_connection_to_node


step s1-view-locks:
    SELECT * FROM master_run_on_worker(
		ARRAY['localhost']::text[],
		ARRAY[57637]::int[],
		ARRAY[$$
          SELECT array_agg(ROW(t.mode, t.count) ORDER BY t.mode) FROM
          (SELECT mode, count(*) count FROM pg_locks
           WHERE locktype='advisory' GROUP BY mode) t$$]::text[],
		false);

node_name      node_port      success        result

localhost      57637          t
step s1-stop-connection:
	SELECT stop_session_level_connection_to_node();

stop_session_level_connection_to_node


step s2-stop-connection:
	SELECT stop_session_level_connection_to_node();

stop_session_level_connection_to_node


restore_isolation_tester_func


