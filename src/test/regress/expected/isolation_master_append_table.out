Parsed test spec with 2 sessions

starting permutation: s1-begin s2-begin s1-master_append_table_to_shard s2-master_append_table_to_shard s1-commit s2-commit
step s1-begin: 
    BEGIN;

step s2-begin: 
	BEGIN;

step s1-master_append_table_to_shard: 
   	SELECT	
   		master_append_table_to_shard(shardid, 'table_to_be_appended', 'localhost', 57636)
	FROM
		pg_dist_shard
	WHERE
		'table_to_append'::regclass::oid = logicalrelid;

master_append_table_to_shard

0.0266667      
step s2-master_append_table_to_shard: 

   	SELECT	
   		master_append_table_to_shard(shardid, 'table_to_be_appended', 'localhost', 57636)
	FROM
		pg_dist_shard
	WHERE
		'table_to_append'::regclass::oid = logicalrelid;
 <waiting ...>
step s1-commit: 
    COMMIT;

step s2-master_append_table_to_shard: <... completed>
master_append_table_to_shard

0.0266667      
step s2-commit: 
	COMMIT;


starting permutation: s1-begin s2-begin s1-create_distributed_table s2-create_distributed_table s1-commit s2-commit
step s1-begin: 
    BEGIN;

step s2-begin: 
	BEGIN;

step s1-create_distributed_table: 
	SELECT create_distributed_table('table_to_distribute', 'id');

create_distributed_table

               
step s2-create_distributed_table: 
	SELECT create_distributed_table('table_to_distribute', 'id');
 <waiting ...>
step s1-commit: 
    COMMIT;

step s2-create_distributed_table: <... completed>
error in steps s1-commit s2-create_distributed_table: ERROR:  table "table_to_distribute" is already distributed
step s2-commit: 
	COMMIT;


starting permutation: s1-begin s2-begin s1-master_append_table_to_shard s2-master_apply_delete_command s1-commit s2-commit
step s1-begin: 
    BEGIN;

step s2-begin: 
	BEGIN;

step s1-master_append_table_to_shard: 
   	SELECT	
   		master_append_table_to_shard(shardid, 'table_to_be_appended', 'localhost', 57636)
	FROM
		pg_dist_shard
	WHERE
		'table_to_append'::regclass::oid = logicalrelid;

master_append_table_to_shard

0.0266667      
step s2-master_apply_delete_command: 
   	SELECT master_apply_delete_command($$DELETE FROM table_to_append WHERE id >= 0$$);

ERROR:  canceling statement due to user request
step s1-commit: 
    COMMIT;

step s2-commit: 
	COMMIT;


starting permutation: s1-begin s2-begin s1-master_apply_delete_command s2-master_append_table_to_shard s1-commit s2-commit
step s1-begin: 
    BEGIN;

step s2-begin: 
	BEGIN;

step s1-master_apply_delete_command: 
   	SELECT master_apply_delete_command($$DELETE FROM table_to_append WHERE id >= 0$$);

master_apply_delete_command

1              
step s2-master_append_table_to_shard: 

   	SELECT	
   		master_append_table_to_shard(shardid, 'table_to_be_appended', 'localhost', 57636)
	FROM
		pg_dist_shard
	WHERE
		'table_to_append'::regclass::oid = logicalrelid;

ERROR:  canceling statement due to user request
step s1-commit: 
    COMMIT;

step s2-commit: 
	COMMIT;


starting permutation: s1-begin s2-begin s1-master_apply_delete_command s2-master_apply_delete_command s1-commit s2-commit
step s1-begin: 
    BEGIN;

step s2-begin: 
	BEGIN;

step s1-master_apply_delete_command: 
   	SELECT master_apply_delete_command($$DELETE FROM table_to_append WHERE id >= 0$$);

master_apply_delete_command

1              
step s2-master_apply_delete_command: 
   	SELECT master_apply_delete_command($$DELETE FROM table_to_append WHERE id >= 0$$);
 <waiting ...>
step s1-commit: 
    COMMIT;

step s2-master_apply_delete_command: <... completed>
master_apply_delete_command

0              
step s2-commit: 
	COMMIT;

