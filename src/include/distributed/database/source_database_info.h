/*-------------------------------------------------------------------------
 *
 * source_database_info.h
 *	  definition of source_database_info data types
 *
 * Copyright (c), Microsoft, Inc.
 *
 *-------------------------------------------------------------------------
 */

#ifndef SOURCE_DATABASE_INFO_H
#define SOURCE_DATABASE_INFO_H


#include "libpq-fe.h"
#include "nodes/pg_list.h"
#include "utils/hsearch.h"


#define NO_MINOR_VERSION (-1)


/*
 * SemanticVersion defines a 3-part version following the format:
 * major.(minor.)patch
 *
 * For versions schemes without a minor versions, minor should be set to
 * NO_MINOR_VERSION.
 */
typedef struct SemanticVersion
{
	int major;
	int minor;
	int patch;
} SemanticVersion;


/*
 * SourceDatabaseTable represents a user-created table on the source database.
 */
typedef struct SourceDatabaseTable
{
	/* name of the schema */
	char *schemaName;

	/* name of the table */
	char *tableName;

	/* whether the table has a replica identity */
	bool hasReplicaIdentity;

	/* relationship kind ('r' for regular, 'p' for partitioned) */
	char relkind;
} SourceDatabaseTable;


/*
 * SourceDatabaseSequence represents a sequence on the source database.
 */
typedef struct SourceDatabaseSequence
{
	/* name of the schema */
	char *schemaName;

	/* name of the sequence*/
	char *sequenceName;

	/* last value generated by the sequence */
	int64 lastValue;
} SourceDatabaseSequence;


SemanticVersion * GetSourceDatabaseVersion(MultiConnection *conn);
bool SourceDatabaseHasPgMigratorSourceExtension(MultiConnection *conn);
char * SemanticVersionToString(SemanticVersion *version);
List * ListSourceDatabaseSchemas(MultiConnection *conn);
List * ListSourceDatabaseTables(MultiConnection *conn);
List * ListSourceDatabaseRegularTableNames(List *tableList);
List * ListSourceDatabaseSequences(MultiConnection *conn);
List * ListSourceMigrationPublications(MultiConnection *conn,
									   char *publicationNamePrefix);
void DeleteDDLPropagationRecordsOnSource(MultiConnection *Conn);


#endif
